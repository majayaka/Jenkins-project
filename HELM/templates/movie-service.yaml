apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.movieService.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.movieService.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.movieService.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.movieService.name }}
    spec:
      containers:
      - name: {{ .Values.movieService.name }}
        image: {{ .Values.movieService.image.repository }}:{{ .Values.movieService.image.tag }}
        command: {{ .Values.movieService.command }}
        args: ["app.main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]
        ports:
        - containerPort: {{ .Values.movieService.port }}
        env:
        - name: DATABASE_URI
          value: {{ .Values.movieService.databaseUri }}
        - name: CAST_SERVICE_HOST_URL
          value: {{ .Values.movieService.castServiceHostUrl }}
        volumeMounts:
        - name: {{ .Values.movieService.volume.name }}
          mountPath: {{ .Values.movieService.volume.mountPath }}
      volumes:
      - name: {{ .Values.movieService.volume.name }}
        persistentVolumeClaim:
          claimName: {{ .Values.movieService.volume.claimName }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.movieService.name }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Values.movieService.name }}
  ports:
  - port: {{ .Values.movieService.port }}
    targetPort: {{ .Values.movieService.port }}